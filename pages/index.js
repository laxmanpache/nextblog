import { collection, getDocs, startAfter } from "firebase/firestore"; 
import Head from 'next/head'
import Image from 'next/image'
import { useState } from "react";
import styles from '../styles/Home.module.css'
import { query, orderBy, limit } from "firebase/firestore"; 
import { db } from "../firebase";
import Link from "next/link";

export default function Home(props) {

  // console.log(props.AllBlogs)
  const [blogs,setblogs] = useState(props.AllBlogs)
  // console.log(blogs)

  const [end,setEnd] = useState(false)
  const loadMore = async ()=>{
    const last  = blogs[blogs.length-1]
    // const res = await  db.collection('blogs')
    // .orderBy('createdAt','desc')
    // .startAfter(new Date(last.createdAt))
    // .limit(3)
    // .get()

    const res= await   query(collection(db, "blogs"), orderBy("createdAt",'desc'), startAfter(new Date(last.createdAt)) ,limit(3));
    // console.log("hello")
    // console.log(res)
    const querySnapshot = await  getDocs(res)
    let newblogs=[]
    const resdata = querySnapshot.forEach(docSnap=>{
      newblogs=[...newblogs ,{...docSnap.data(),
        createdAt:docSnap.data().createdAt.toMillis(),
        id:docSnap.id
       }]
    })
    setblogs(blogs.concat(newblogs))

    if(newblogs.length < 3){
      setEnd(true)
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="center">
        {blogs.map(blog=>{
          return(
            <div className="card" key={blog.createdAt}>
            <div className="card-image">

              <img src={blog.imageUrl} />
              <span className="card-title">{blog.title}</span>
            </div>
            <div className="card-content">
              <p>{blog.body}</p>
            </div>
            <div className="card-action">
              <Link href={`/blogs/${blog.id}`}><a>Read More</a></Link>
            </div>
          
          </div>
          )
        })}

        {end==false?
        <button className="btn #fb8c00 orange darken-1" onClick={()=>loadMore()}>Load more</button>
         :<h3>You have reached end</h3>
        }
        
          

        <style jsx>
           {`
            .card{
              max-width:500px;
              margin:22px auto;
            }
            p{
              display: -webkit-box;
              overflow: hidden;
              -webkit-line-clamp: 1;
              -webkit-box-orient: vertical;
            }
           `}
        </style>
    </div>
    
    </div>
  )
}


export async function getServerSideProps(context) {

  // const qrysnap=await collection('blogs').orderBy('createdAt','desc').get();
  // const AllBlogs=qrysnap.docs.map(docsnap=>docsnap.data())

  // console.log("Hello") query(citiesRef, orderBy("name", "desc"), limit(3))

  const first =query(collection(db, "blogs"), orderBy("createdAt",'desc'), limit(3));
  const querySnapshot = await  getDocs(first)
  //  getDocs(collection(db, "blogs").limit(2));

  let AllBlogs=[]
    querySnapshot.forEach((doc) => {
      AllBlogs=[...AllBlogs ,{...doc.data(),
       createdAt:doc.data().createdAt.toMillis(),
       id:doc.id
      }]
});
// console.log(AllBlogs)
 
return { props : {AllBlogs} }
}